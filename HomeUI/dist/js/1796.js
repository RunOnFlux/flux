"use strict";(globalThis["webpackChunkflux"]=globalThis["webpackChunkflux"]||[]).push([[1796],{11796:(t,e,a)=>{a.r(e),a.d(e,{default:()=>f});var n=function(){var t=this,e=t._self._c;return e("b-overlay",{attrs:{show:!t.callResponse.data,variant:"transparent",blur:"5px"}},[e("b-card",[t.callResponse.data?t._e():e("b-card-title",[t._v(" Loading... ")]),t.callResponse.data?e("b-form-textarea",{attrs:{plaintext:"","no-resize":"",rows:"11",value:t.callResponse.data}}):t._e()],1)],1)},r=[],o=a(33052),s=a(80663),l=a(52578),i=a(79406),d=a(41109),u=a(44919);const c={components:{BCard:o.v,BCardTitle:s.r,BFormTextarea:l.b,BOverlay:i.n,ToastificationContent:d.A},data(){return{callResponse:{status:"",data:""}}},mounted(){this.daemonGetWalletInfo()},methods:{async daemonGetWalletInfo(){const t=localStorage.getItem("zelidauth"),e=await u.A.getWalletInfo(t);"error"===e.data.status?this.$toast({component:d.A,props:{title:e.data.data.message||e.data.data,icon:"InfoIcon",variant:"danger"}}):(this.callResponse.status=e.data.status,this.callResponse.data=JSON.stringify(e.data.data,null,4))}}},g=c;var m=a(81656),h=(0,m.A)(g,n,r,!1,null,null,null);const f=h.exports},41109:(t,e,a)=>{a.d(e,{A:()=>u});var n=function(){var t=this,e=t._self._c;return e("div",{staticClass:"toastification"},[e("div",{staticClass:"d-flex align-items-start"},[e("b-avatar",{staticClass:"mr-75 flex-shrink-0",attrs:{variant:t.variant,size:"1.8rem"}},[e("feather-icon",{attrs:{icon:t.icon,size:"15"}})],1),e("div",{staticClass:"d-flex flex-grow-1"},[e("div",[t.title?e("h5",{staticClass:"mb-0 font-weight-bolder toastification-title",class:`text-${t.variant}`,domProps:{textContent:t._s(t.title)}}):t._e(),t.text?e("small",{staticClass:"d-inline-block text-body",domProps:{textContent:t._s(t.text)}}):t._e()]),e("span",{staticClass:"cursor-pointer toastification-close-icon ml-auto",on:{click:function(e){return t.$emit("close-toast")}}},[t.hideClose?t._e():e("feather-icon",{staticClass:"text-body",attrs:{icon:"XIcon"}})],1)])],1)])},r=[],o=a(53950);const s={components:{BAvatar:o.Cq},props:{variant:{type:String,default:"primary"},icon:{type:String,default:null},title:{type:String,default:null},text:{type:String,default:null},hideClose:{type:Boolean,default:!1}}},l=s;var i=a(81656),d=(0,i.A)(l,n,r,!1,null,"22d964ca",null);const u=d.exports},44919:(t,e,a)=>{a.d(e,{A:()=>r});var n=a(544);const r={help(){return(0,n.A)().get("/daemon/help")},helpSpecific(t){return(0,n.A)().get(`/daemon/help/${t}`)},getInfo(){return(0,n.A)().get("/daemon/getinfo")},getFluxNodeStatus(){return(0,n.A)().get("/daemon/getzelnodestatus")},getRawTransaction(t,e){return(0,n.A)().get(`/daemon/getrawtransaction/${t}/${e}`)},listFluxNodes(){return(0,n.A)().get("/daemon/listzelnodes")},viewDeterministicFluxNodeList(){return(0,n.A)().get("/daemon/viewdeterministiczelnodelist")},getFluxNodeCount(){return(0,n.A)().get("/daemon/getzelnodecount")},getStartList(){return(0,n.A)().get("/daemon/getstartlist")},getDOSList(){return(0,n.A)().get("/daemon/getdoslist")},fluxCurrentWinner(){return(0,n.A)().get("/daemon/fluxcurrentwinner")},getBenchmarks(){return(0,n.A)().get("/daemon/getbenchmarks")},getBenchStatus(){return(0,n.A)().get("/daemon/getbenchstatus")},startBenchmark(t){return(0,n.A)().get("/daemon/startbenchmark",{headers:{zelidauth:t}})},stopBenchmark(t){return(0,n.A)().get("/daemon/stopbenchmark",{headers:{zelidauth:t}})},getBlockCount(){return(0,n.A)().get("/daemon/getBlockCount")},getBlockchainInfo(){return(0,n.A)().get("/daemon/getblockchaininfo")},getMiningInfo(){return(0,n.A)().get("/daemon/getmininginfo")},getNetworkInfo(){return(0,n.A)().get("/daemon/getnetworkinfo")},validateAddress(t,e){return(0,n.A)().get(`/daemon/validateaddress/${e}`,{headers:{zelidauth:t}})},getWalletInfo(t){return(0,n.A)().get("/daemon/getwalletinfo",{headers:{zelidauth:t}})},listFluxNodeConf(t){return(0,n.A)().get("/daemon/listzelnodeconf",{headers:{zelidauth:t}})},start(t){return(0,n.A)().get("/daemon/start",{headers:{zelidauth:t}})},restart(t){return(0,n.A)().get("/daemon/restart",{headers:{zelidauth:t}})},stopDaemon(t){return(0,n.A)().get("/daemon/stop",{headers:{zelidauth:t}})},rescanDaemon(t,e){return(0,n.A)().get(`/daemon/rescanblockchain/${e}`,{headers:{zelidauth:t}})},getBlock(t,e){return(0,n.A)().get(`/daemon/getblock/${t}/${e}`)},tailDaemonDebug(t){return(0,n.A)().get("/flux/taildaemondebug",{headers:{zelidauth:t}})},justAPI(){return(0,n.A)()},cancelToken(){return n.x}}}}]);