"use strict";(globalThis["webpackChunkflux"]=globalThis["webpackChunkflux"]||[]).push([[5713],{50715:(t,e,s)=>{s.r(e),s.d(e,{default:()=>$});var a=function(){var t=this,e=t._self._c;return e("div",[e("b-card",{attrs:{title:"Welcome to Flux - The biggest decentralized computational network"}},[e("list-entry",{attrs:{title:"Dashboard",data:t.dashboard}}),e("list-entry",{attrs:{title:"Applications",data:t.applications}}),e("list-entry",{attrs:{title:"XDAO",data:t.xdao}}),e("list-entry",{attrs:{title:"Administration",data:t.administration}}),e("list-entry",{attrs:{title:"Node Status",data:t.getNodeStatusResponse.nodeStatus,variant:t.getNodeStatusResponse.class}})],1),"none"===t.privilege?e("b-card",[e("b-card-title",[t._v("Automated Login")]),e("dl",{staticClass:"row"},[e("dd",{staticClass:"col-sm-6"},[e("b-tabs",{attrs:{"content-class":"mt-0"}},[e("b-tab",{attrs:{title:"3rd Party Login",active:""}},[e("div",{staticClass:"ssoLogin"},[e("div",{attrs:{id:"ssoLoading"}},[e("b-spinner",{attrs:{variant:"primary"}}),e("div",[t._v(" Loading Sign In Options ")])],1),e("div",{staticStyle:{display:"none"},attrs:{id:"ssoLoggedIn"}},[e("b-spinner",{attrs:{variant:"primary"}}),e("div",[t._v(" Finishing Login Process ")])],1),e("div",{staticStyle:{display:"none"},attrs:{id:"ssoVerify"}},[e("b-button",{staticClass:"mb-2",attrs:{variant:"primary",type:"submit"},on:{click:t.cancelVerification}},[t._v(" Cancel Verification ")]),e("div",[e("b-spinner",{attrs:{variant:"primary"}}),e("div",[t._v(" Finishing Verification Process ")]),e("div",[e("i",[t._v("Please check email for verification link.")])])],1)],1),e("div",{attrs:{id:"firebaseui-auth-container"}})])]),e("b-tab",{attrs:{title:"Email/Password"}},[e("dl",{staticClass:"row"},[e("dd",{staticClass:"col-sm-12 mt-1"},[e("b-form",{ref:"emailLoginForm",staticClass:"mx-5",attrs:{id:"emailLoginForm"},on:{submit:function(t){t.preventDefault()}}},[e("b-row",[e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{label:"Email","label-for":"h-email","label-cols-md":"4"}},[e("b-form-input",{attrs:{id:"h-email",type:"email",placeholder:"Email...",required:""},model:{value:t.emailForm.email,callback:function(e){t.$set(t.emailForm,"email",e)},expression:"emailForm.email"}})],1)],1),e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{label:"Password","label-for":"h-password","label-cols-md":"4"}},[e("b-form-input",{attrs:{id:"h-password",type:"password",placeholder:"Password...",required:""},model:{value:t.emailForm.password,callback:function(e){t.$set(t.emailForm,"password",e)},expression:"emailForm.password"}})],1)],1),e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{"label-cols-md":"4"}},[e("b-button",{staticClass:"w-100",attrs:{type:"submit",variant:"primary"},on:{click:t.emailLogin}},[e("div",{staticStyle:{display:"none"},attrs:{id:"emailLoginProcessing"}},[e("b-spinner",{attrs:{variant:"secondary",small:""}})],1),e("div",{attrs:{id:"emailLoginExecute"}},[t._v(" Login ")])])],1)],1),e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{"label-cols-md":"4"}},[e("b-button",{directives:[{name:"b-modal",rawName:"v-b-modal.modal-prevent-closing",modifiers:{"modal-prevent-closing":!0}}],staticClass:"w-100",attrs:{id:"signUpButton",type:"submit",variant:"secondary"},on:{click:t.createAccount}},[t._v(" Sign Up ")])],1)],1)],1)],1),e("div",{staticClass:"text-center",staticStyle:{display:"none"},attrs:{id:"ssoEmailVerify"}},[e("b-button",{staticClass:"mb-2",attrs:{variant:"primary",type:"submit"},on:{click:t.cancelVerification}},[t._v(" Cancel Verification ")]),e("div",[e("b-spinner",{attrs:{variant:"primary"}}),e("div",[t._v(" Finishing Verification Process ")]),e("div",[e("i",[t._v("Please check email for verification link.")])])],1)],1)],1)])])],1)],1),e("dd",{staticClass:"col-sm-6"},[e("b-card-text",{staticClass:"text-center loginText"},[t._v(" Decentralized Login ")]),e("div",{staticClass:"loginRow"},[e("a",{attrs:{href:`zel:?action=sign&message=${t.loginPhrase}&icon=https%3A%2F%2Fraw.githubusercontent.com%2Frunonflux%2Fflux%2Fmaster%2FzelID.svg&callback=${t.callbackValue}`,title:"Login with Zelcore"},on:{click:t.initiateLoginWS}},[e("img",{staticClass:"walletIcon",attrs:{src:s(96358),alt:"Flux ID",height:"100%",width:"100%"}})]),e("a",{attrs:{title:"Login with SSP"},on:{click:t.initSSP}},[e("img",{staticClass:"walletIcon",attrs:{src:"dark"===t.skin?s(56070):s(58962),alt:"SSP",height:"100%",width:"100%"}})])]),e("div",{staticClass:"loginRow"},[e("a",{attrs:{title:"Login with WalletConnect"},on:{click:t.initWalletConnect}},[e("img",{staticClass:"walletIcon",attrs:{src:s(47622),alt:"WalletConnect",height:"100%",width:"100%"}})]),e("a",{attrs:{title:"Login with Metamask"},on:{click:t.initMetamask}},[e("img",{staticClass:"walletIcon",attrs:{src:s(28125),alt:"Metamask",height:"100%",width:"100%"}})])])],1)])],1):t._e(),"none"===t.privilege?e("b-card",[e("b-card-title",[t._v("Manual Login")]),e("dl",{staticClass:"row"},[e("dd",{staticClass:"col-sm-12"},[e("b-card-text",{staticClass:"text-center"},[t._v(" Sign the following message with any Flux ID / SSP Wallet ID / Bitcoin / Ethereum address ")]),e("br"),e("br"),e("b-form",{staticClass:"mx-5",on:{submit:function(t){t.preventDefault()}}},[e("b-row",[e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{label:"Message","label-for":"h-message","label-cols-md":"3"}},[e("b-form-input",{attrs:{id:"h-message",placeholder:"Insert Login Phrase"},model:{value:t.loginForm.loginPhrase,callback:function(e){t.$set(t.loginForm,"loginPhrase",e)},expression:"loginForm.loginPhrase"}})],1)],1),e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{label:"Address","label-for":"h-address","label-cols-md":"3"}},[e("b-form-input",{attrs:{id:"h-address",placeholder:"Insert Flux ID or Bitcoin address"},model:{value:t.loginForm.zelid,callback:function(e){t.$set(t.loginForm,"zelid",e)},expression:"loginForm.zelid"}})],1)],1),e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{label:"Signature","label-for":"h-signature","label-cols-md":"3"}},[e("b-form-input",{attrs:{id:"h-signature",placeholder:"Insert Signature"},model:{value:t.loginForm.signature,callback:function(e){t.$set(t.loginForm,"signature",e)},expression:"loginForm.signature"}})],1)],1),e("b-col",{attrs:{cols:"12"}},[e("b-form-group",{attrs:{"label-cols-md":"3"}},[e("b-button",{staticClass:"w-100",attrs:{type:"submit",variant:"primary"},on:{click:t.login}},[t._v(" Login ")])],1)],1)],1)],1)],1)])],1):t._e(),e("b-modal",{ref:"modal",attrs:{id:"modal-prevent-closing",title:"Create Flux SSO Account","header-bg-variant":"primary","title-class":"modal-title"},on:{show:t.resetModal,hidden:t.resetModal,ok:t.handleOk}},[e("form",{ref:"form",on:{submit:function(e){return e.stopPropagation(),e.preventDefault(),t.handleSubmit.apply(null,arguments)}}},[e("b-form-group",{attrs:{label:"Email","label-for":"email-input","invalid-feedback":"Email is required",state:t.emailState}},[e("b-form-input",{attrs:{id:"email-input",type:"email",state:t.emailState,required:""},model:{value:t.createSSOForm.email,callback:function(e){t.$set(t.createSSOForm,"email",e)},expression:"createSSOForm.email"}})],1),e("b-form-group",{attrs:{label:"Password","label-for":"pw1-input","invalid-feedback":"Password is required",state:t.pw1State}},[e("b-form-input",{attrs:{id:"pw1-input",type:"password",state:t.pw1State,required:""},model:{value:t.createSSOForm.pw1,callback:function(e){t.$set(t.createSSOForm,"pw1",e)},expression:"createSSOForm.pw1"}})],1),e("b-form-group",{attrs:{label:"Confirm Password","label-for":"pw2-input","invalid-feedback":"Password is required",state:t.pw2State}},[e("b-form-input",{attrs:{id:"pw2-input",type:"password",state:t.pw2State,required:""},model:{value:t.createSSOForm.pw2,callback:function(e){t.$set(t.createSSOForm,"pw2",e)},expression:"createSSOForm.pw2"}})],1)],1),e("div",{staticClass:"sso-tos"},[e("p",{staticStyle:{width:"75%"}},[t._v(" By continuing, you are indicating that you accept our "),e("a",{staticClass:"highlight",attrs:{href:"https://cdn.runonflux.io/Flux_Terms_of_Service.pdf",referrerpolicy:"no-referrer",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Terms of Service")]),t._v(" and "),e("a",{staticClass:"highlight",attrs:{href:"https://runonflux.io/privacyPolicy",referrerpolicy:"no-referrer",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Privacy Policy")]),t._v(". ")])])])],1)},i=[],o=s(86855),n=s(64206),r=s(49379),l=s(15193),c=s(54909),d=s(50725),u=s(26253),h=s(22183),g=s(46709),m=s(20629),p=s(38511),f=s(62693),y=s(94145),w=s(44866),b=s(74811),v=s(5449),S=s(34547),x=s(51748),P=s(37307),F=s(34369),I=s(27616),k=s(87066),L=s(48764)["lW"];const C="df787edc6839c7de49d527bba9199eaa",T={projectId:C,metadata:{name:"Flux Cloud",description:"Flux, Your Gateway to a Decentralized World",url:"https://home.runonflux.io",icons:["https://home.runonflux.io/img/logo.png"]}},E=new f.u(T),_={enableDebug:!0},O=new y.MetaMaskSDK(_);let R;const B=s(80129),A=s(58971),V={components:{BCard:o._,BCardText:n.j,BCardTitle:r._,BButton:l.T,BForm:c.e,BCol:d.l,BRow:u.T,BFormInput:h.e,BFormGroup:g.x,ListEntry:x.Z,ToastificationContent:S.Z},data(){return{modalShow:!1,dashboard:"Check Flux network information, resources available or a map with server locations.",xdao:"See the list of changes proposed to Flux network, create new ones and vote.",applications:"Buy on marketplace, register your own app, manage your active apps.",administration:"Tools for the infrastructure administrators, node operators.",websocket:null,ui:null,ssoVerification:!1,errorMessage:"",loginPhrase:"",loginForm:{zelid:"",signature:"",loginPhrase:""},emailForm:{email:"",password:""},createSSOForm:{email:"",pw1:"",pw2:""},emailState:null,pw1State:null,pw2State:null,signClient:null,getNodeStatusResponse:{class:"text-success",status:"",data:"",nodeStatus:"Checking status..."}}},computed:{...(0,m.rn)("flux",["userconfig","config","privilege"]),skin(){return(0,P.Z)().skin.value},callbackValue(){const t=this.backendURL(),e=`${t}/id/verifylogin`;return encodeURI(e)}},mounted(){this.daemonWelcomeGetFluxNodeStatus(),this.getZelIdLoginPhrase(),this.initMMSDK();const t={callbacks:{signInSuccessWithAuthResult:this.handleSignInSuccessWithAuthResult,uiShown(){document.getElementById("ssoLoading").style.display="none"}},popupMode:!0,signInFlow:"popup",signInOptions:[{provider:w.Z.auth.GoogleAuthProvider.PROVIDER_ID,customParameters:{prompt:"select_account"}},"apple.com"],tosUrl:"https://cdn.runonflux.io/Flux_Terms_of_Service.pdf",privacyPolicyUrl:"https://runonflux.io/privacyPolicy"};"none"===this.privilege&&(b.I.AuthUI.getInstance()?(this.ui=b.I.AuthUI.getInstance(),this.ui.start("#firebaseui-auth-container",t)):(this.ui=new b.I.AuthUI(w.Z.auth()),this.ui.start("#firebaseui-auth-container",t)))},methods:{handleSignInSuccessWithAuthResult(t){return t.user&&this.handleSignedInUser(t.user),!1},async handleSignedInUser(t){try{if(t.emailVerified){document.getElementById("ssoLoggedIn").style.display="block";const e=t.auth.currentUser.accessToken,s=this.loginPhrase,a={"Content-Type":"application/json",Authorization:`Bearer ${e}`},i=await k.Z.post("https://service.fluxcore.ai/api/signInOrUp",{message:s},{headers:a});if("success"!==i.data?.status)throw new Error("Login Failed, please try again.");const o={zelid:i.data.public_address,signature:i.data.signature,loginPhrase:this.loginPhrase};F.Z.verifyLogin(o).then((t=>{if(console.log(t),"success"===t.data.status){const e={zelid:i.data.public_address,signature:i.data.signature,loginPhrase:this.loginPhrase};this.$store.commit("flux/setPrivilege",t.data.data.privilage),this.$store.commit("flux/setZelid",e.zelid),localStorage.setItem("zelidauth",B.stringify(e)),this.showToast("success",t.data.data.message)}else this.showToast(this.getVariant(t.data.status),t.data.data.message||t.data.data),this.resetLoginUI()})).catch((t=>{console.log(t),this.resetLoginUI()}))}else{if(t.displayName){const e=/\b((http|https|ftp):\/\/[-A-Z0-9+&@#%?=~_|!:,.;]*[-A-Z0-9+&@#%=~_|]|www\.[-A-Z0-9+&@#%?=~_|!:,.;]*[-A-Z0-9+&@#%=~_|]|[-A-Z0-9]+\.[A-Z]{2,}[-A-Z0-9+&@#%?=~_|]*[-A-Z0-9+&@#%=~_|])/i;if(e.test(t.displayName))throw new Error("Login Failed, please try again.")}t.sendEmailVerification().then((()=>{this.showToast("info","please verify email")})).catch((()=>{this.showToast("warning","failed to send new verification email")})).finally((async()=>{document.getElementById("ssoVerify").style.display="block",document.getElementById("ssoEmailVerify").style.display="block",document.getElementById("emailLoginForm").style.display="none",this.ssoVerification=!0,await this.checkVerification()}))}}catch(e){this.resetLoginUI(),this.showToast("warning","Login Failed, please try again.")}},async checkVerification(){try{let t=(0,v.PR)();t&&this.ssoVerification?(await t.reload(),t=(0,v.PR)(),t.emailVerified?(this.showToast("info","email verified"),document.getElementById("ssoVerify").style.display="none",this.handleSignedInUser(t),this.ssoVerification=!1):setTimeout((()=>{this.checkVerification()}),5e3)):this.resetLoginUI()}catch(t){this.showToast("warning","email verification failed"),this.resetLoginUI()}},cancelVerification(){this.resetLoginUI()},resetLoginUI(){document.getElementById("ssoVerify").style.display="none",document.getElementById("ssoEmailVerify").style.display="none",document.getElementById("ssoLoggedIn").style.display="none",document.getElementById("emailLoginProcessing").style.display="none",document.getElementById("emailLoginExecute").style.display="block",document.getElementById("emailLoginForm").style.display="block",document.getElementById("signUpButton").style.display="block",this.emailForm.email="",this.emailForm.password="",this.ui.reset(),this.ui.start("#firebaseui-auth-container"),this.ssoVerification=!1},async daemonWelcomeGetFluxNodeStatus(){const t=await I.Z.getFluxNodeStatus().catch((()=>null)),e=await I.Z.getBlockchainInfo().catch((()=>null));if(!t||!e)return this.getNodeStatusResponse.status="UNKNOWN",this.getNodeStatusResponse.nodeStatus="Unable to connect to Flux Blockchain Daemon.",void(this.getNodeStatusResponse.class="danger");this.getNodeStatusResponse.status=t.data.status,this.getNodeStatusResponse.data=t.data.data,this.getNodeStatusResponse.data&&e.data.data&&(e.data.data.blocks+3<e.data.data.headers?(this.getNodeStatusResponse.nodeStatus="Blockchain not synced, check Administration/Daemon/Blockchain info section.",this.getNodeStatusResponse.class="warning"):"CONFIRMED"===this.getNodeStatusResponse.data.status||"CONFIRMED"===this.getNodeStatusResponse.data.location?(this.getNodeStatusResponse.nodeStatus="Connected to the network",this.getNodeStatusResponse.class="success"):"STARTED"===this.getNodeStatusResponse.data.status||"STARTED"===this.getNodeStatusResponse.data.location?(this.getNodeStatusResponse.nodeStatus="Connecting to the network. Flux is running with limited capabilities.",this.getNodeStatusResponse.class="warning"):(this.getNodeStatusResponse.nodeStatus="Not connected to the network. Flux is running with limited capabilities.",this.getNodeStatusResponse.class="danger"))},async initMMSDK(){try{await O.init(),R=O.getProvider()}catch(t){console.log(t)}},backendURL(){const{protocol:t,hostname:e,port:s}=window.location;let a="";a+=t,a+="//";const i=/[A-Za-z]/g;if(e.split("-")[4]){const t=e.split("-"),s=t[4].split("."),i=+s[0]+1;s[0]=i.toString(),s[2]="api",t[4]="",a+=t.join("-"),a+=s.join(".")}else if(e.match(i)){const t=e.split(".");t[0]="api",a+=t.join(".")}else{if("string"===typeof e&&this.$store.commit("flux/setUserIp",e),+s>16100){const t=+s+1;this.$store.commit("flux/setFluxPort",t)}a+=e,a+=":",a+=this.config.apiPort}return A.get("backendURL")||a},initiateLoginWS(){const t=this;let e=this.backendURL();e=e.replace("https://","wss://"),e=e.replace("http://","ws://");const s=`${e}/ws/id/${this.loginPhrase}`,a=new WebSocket(s);this.websocket=a,a.onopen=e=>{t.onOpen(e)},a.onclose=e=>{t.onClose(e)},a.onmessage=e=>{t.onMessage(e)},a.onerror=e=>{t.onError(e)}},onError(t){console.log(t)},onMessage(t){const e=B.parse(t.data);if(console.log(e),"success"===e.status&&e.data){const t={zelid:e.data.zelid,signature:e.data.signature,loginPhrase:e.data.loginPhrase};this.$store.commit("flux/setPrivilege",e.data.privilage),this.$store.commit("flux/setZelid",t.zelid),localStorage.setItem("zelidauth",B.stringify(t)),this.showToast("success",e.data.message)}console.log(e),console.log(t)},onClose(t){console.log(t)},onOpen(t){console.log(t)},showToast(t,e){this.$toast({component:S.Z,props:{title:e,icon:"BellIcon",variant:t}})},getZelIdLoginPhrase(){F.Z.loginPhrase().then((t=>{console.log(t),"error"===t.data.status?this.getEmergencyLoginPhrase():(this.loginPhrase=t.data.data,this.loginForm.loginPhrase=t.data.data)})).catch((t=>{console.log(t),this.showToast("danger",t)}))},getEmergencyLoginPhrase(){F.Z.emergencyLoginPhrase().then((t=>{console.log(t),"error"===t.data.status?this.showToast("danger",t.data.data.message):(this.loginPhrase=t.data.data,this.loginForm.loginPhrase=t.data.data)})).catch((t=>{console.log(t),this.showToast("danger",t)}))},getVariant(t){return"error"===t?"danger":"message"===t?"info":t},login(){console.log(this.loginForm),F.Z.verifyLogin(this.loginForm).then((t=>{if(console.log(t),"success"===t.data.status){const e={zelid:this.loginForm.zelid,signature:this.loginForm.signature,loginPhrase:this.loginForm.loginPhrase};this.$store.commit("flux/setPrivilege",t.data.data.privilage),this.$store.commit("flux/setZelid",e.zelid),localStorage.setItem("zelidauth",B.stringify(e)),this.showToast("success",t.data.data.message)}else this.showToast(this.getVariant(t.data.status),t.data.data.message||t.data.data)})).catch((t=>{console.log(t),this.showToast("danger",t.toString())}))},async emailLogin(){try{if(this.$refs.emailLoginForm.reportValidity()){document.getElementById("emailLoginExecute").style.display="none",document.getElementById("emailLoginProcessing").style.display="block",document.getElementById("signUpButton").style.display="none";const t=await(0,v.fZ)(this.emailForm);this.handleSignInSuccessWithAuthResult(t)}}catch(t){document.getElementById("emailLoginExecute").style.display="block",document.getElementById("emailLoginProcessing").style.display="none",document.getElementById("signUpButton").style.display="block",document.getElementById("ssoEmailVerify").style.display="none",this.showToast("danger","login failed, please try again")}},async createAccount(){this.modalShow=!this.modalShow},async onSessionConnect(t){console.log(t);const e=await this.signClient.request({topic:t.topic,chainId:"eip155:1",request:{method:"personal_sign",params:[this.loginPhrase,t.namespaces.eip155.accounts[0].split(":")[2]]}});console.log(e);const s={zelid:t.namespaces.eip155.accounts[0].split(":")[2],signature:e,loginPhrase:this.loginPhrase},a=await F.Z.verifyLogin(s);if(console.log(a),"success"===a.data.status){const t=s;this.$store.commit("flux/setPrivilege",a.data.data.privilage),this.$store.commit("flux/setZelid",t.zelid),localStorage.setItem("zelidauth",B.stringify(t)),this.showToast("success",a.data.data.message)}else this.showToast(this.getVariant(a.data.status),a.data.data.message||a.data.data)},onSessionUpdate(t){console.log(t)},async initWalletConnect(){const t=this;try{const e=await p.ZP.init(T);this.signClient=e,e.on("session_event",(({event:t})=>{console.log(t)})),e.on("session_update",(({topic:s,params:a})=>{const{namespaces:i}=a,o=e.session.get(s),n={...o,namespaces:i};t.onSessionUpdate(n)})),e.on("session_delete",(()=>{}));const{uri:s,approval:a}=await e.connect({requiredNamespaces:{eip155:{methods:["personal_sign"],chains:["eip155:1"],events:["chainChanged","accountsChanged"]}}});if(s){E.openModal({uri:s});const t=await a();this.onSessionConnect(t),E.closeModal()}}catch(e){console.error(e),this.showToast("danger",e.message)}},async siwe(t,e){try{const s=`0x${L.from(t,"utf8").toString("hex")}`,a=await R.request({method:"personal_sign",params:[s,e]});console.log(a);const i={zelid:e,signature:a,loginPhrase:this.loginPhrase},o=await F.Z.verifyLogin(i);if(console.log(o),"success"===o.data.status){const t=i;this.$store.commit("flux/setPrivilege",o.data.data.privilage),this.$store.commit("flux/setZelid",t.zelid),localStorage.setItem("zelidauth",B.stringify(t)),this.showToast("success",o.data.data.message)}else this.showToast(this.getVariant(o.data.status),o.data.data.message||o.data.data)}catch(s){console.error(s),this.showToast("danger",s.message)}},async initMetamask(){try{if(!R)return void this.showToast("danger","Metamask not detected");let t;if(R&&!R.selectedAddress){const e=await R.request({method:"eth_requestAccounts",params:[]});console.log(e),t=e[0]}else t=R.selectedAddress;this.siwe(this.loginPhrase,t)}catch(t){this.showToast("danger",t.message)}},async initSSP(){try{if(!window.ssp)return void this.showToast("danger","SSP Wallet not installed");const t=await window.ssp.request("sspwid_sign_message",{message:this.loginPhrase});if("ERROR"===t.status)throw new Error(t.data||t.result);const e={zelid:t.address,signature:t.signature,loginPhrase:this.loginPhrase},s=await F.Z.verifyLogin(e);if(console.log(s),"success"===s.data.status){const t=e;this.$store.commit("flux/setPrivilege",s.data.data.privilage),this.$store.commit("flux/setZelid",t.zelid),localStorage.setItem("zelidauth",B.stringify(t)),this.showToast("success",s.data.data.message)}else this.showToast(this.getVariant(s.data.status),s.data.data.message||s.data.data)}catch(t){this.showToast("danger",t.message)}},checkFormValidity(){const t=this.$refs.form.reportValidity();return this.createSSOForm.pw1.length>=8?(this.pw1State=!0,this.createSSOForm.pw2.length>=8?(this.pw2State=!0,this.createSSOForm.pw1!==this.createSSOForm.pw2?(this.showToast("info","passwords do not match"),this.pw1State=!1,this.pw2State=!1,null):t):(this.showToast("info","password must be at least 8 chars"),null)):(this.showToast("info","password must be at least 8 chars"),null)},resetModal(){this.createSSOForm.email="",this.createSSOForm.pw1="",this.createSSOForm.pw2="",this.emailState=null,this.pw1State=null,this.pw2State=null},handleOk(t){t.preventDefault(),this.handleSubmit()},async handleSubmit(){if(this.checkFormValidity()){try{const t=await(0,v.wY)({email:this.createSSOForm.email,password:this.createSSOForm.pw1});this.handleSignInSuccessWithAuthResult(t)}catch(t){this.resetLoginUI(),this.showToast("danger","Account creation failed, try again")}this.$nextTick((()=>{this.$bvModal.hide("modal-prevent-closing")}))}}}},N=V;var Z=s(1001),z=(0,Z.Z)(N,a,i,!1,null,null,null);const $=z.exports},84328:(t,e,s)=>{var a=s(65290),i=s(27578),o=s(6310),n=function(t){return function(e,s,n){var r,l=a(e),c=o(l),d=i(n,c);if(t&&s!==s){while(c>d)if(r=l[d++],r!==r)return!0}else for(;c>d;d++)if((t||d in l)&&l[d]===s)return t||d||0;return!t&&-1}};t.exports={includes:n(!0),indexOf:n(!1)}},5649:(t,e,s)=>{var a=s(67697),i=s(92297),o=TypeError,n=Object.getOwnPropertyDescriptor,r=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=r?function(t,e){if(i(t)&&!n(t,"length").writable)throw new o("Cannot set read only .length");return t.length=e}:function(t,e){return t.length=e}},8758:(t,e,s)=>{var a=s(36812),i=s(19152),o=s(82474),n=s(72560);t.exports=function(t,e,s){for(var r=i(e),l=n.f,c=o.f,d=0;d<r.length;d++){var u=r[d];a(t,u)||s&&a(s,u)||l(t,u,c(e,u))}}},55565:t=>{var e=TypeError,s=9007199254740991;t.exports=function(t){if(t>s)throw e("Maximum allowed index exceeded");return t}},72739:t=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},79989:(t,e,s)=>{var a=s(19037),i=s(82474).f,o=s(75773),n=s(11880),r=s(95014),l=s(8758),c=s(35266);t.exports=function(t,e){var s,d,u,h,g,m,p=t.target,f=t.global,y=t.stat;if(d=f?a:y?a[p]||r(p,{}):(a[p]||{}).prototype,d)for(u in e){if(g=e[u],t.dontCallGetSet?(m=i(d,u),h=m&&m.value):h=d[u],s=c(f?u:p+(y?".":"#")+u,t.forced),!s&&void 0!==h){if(typeof g==typeof h)continue;l(g,h)}(t.sham||h&&h.sham)&&o(g,"sham",!0),n(d,u,g,t)}}},94413:(t,e,s)=>{var a=s(68844),i=s(3689),o=s(6648),n=Object,r=a("".split);t.exports=i((function(){return!n("z").propertyIsEnumerable(0)}))?function(t){return"String"===o(t)?r(t,""):n(t)}:n},92297:(t,e,s)=>{var a=s(6648);t.exports=Array.isArray||function(t){return"Array"===a(t)}},35266:(t,e,s)=>{var a=s(3689),i=s(69985),o=/#|\.prototype\./,n=function(t,e){var s=l[r(t)];return s===d||s!==c&&(i(e)?a(e):!!e)},r=n.normalize=function(t){return String(t).replace(o,".").toLowerCase()},l=n.data={},c=n.NATIVE="N",d=n.POLYFILL="P";t.exports=n},6310:(t,e,s)=>{var a=s(43126);t.exports=function(t){return a(t.length)}},58828:t=>{var e=Math.ceil,s=Math.floor;t.exports=Math.trunc||function(t){var a=+t;return(a>0?s:e)(a)}},82474:(t,e,s)=>{var a=s(67697),i=s(22615),o=s(49556),n=s(75684),r=s(65290),l=s(18360),c=s(36812),d=s(68506),u=Object.getOwnPropertyDescriptor;e.f=a?u:function(t,e){if(t=r(t),e=l(e),d)try{return u(t,e)}catch(s){}if(c(t,e))return n(!i(o.f,t,e),t[e])}},72741:(t,e,s)=>{var a=s(54948),i=s(72739),o=i.concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return a(t,o)}},7518:(t,e)=>{e.f=Object.getOwnPropertySymbols},54948:(t,e,s)=>{var a=s(68844),i=s(36812),o=s(65290),n=s(84328).indexOf,r=s(57248),l=a([].push);t.exports=function(t,e){var s,a=o(t),c=0,d=[];for(s in a)!i(r,s)&&i(a,s)&&l(d,s);while(e.length>c)i(a,s=e[c++])&&(~n(d,s)||l(d,s));return d}},49556:(t,e)=>{var s={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!s.call({1:2},1);e.f=i?function(t){var e=a(this,t);return!!e&&e.enumerable}:s},19152:(t,e,s)=>{var a=s(76058),i=s(68844),o=s(72741),n=s(7518),r=s(85027),l=i([].concat);t.exports=a("Reflect","ownKeys")||function(t){var e=o.f(r(t)),s=n.f;return s?l(e,s(t)):e}},27578:(t,e,s)=>{var a=s(68700),i=Math.max,o=Math.min;t.exports=function(t,e){var s=a(t);return s<0?i(s+e,0):o(s,e)}},65290:(t,e,s)=>{var a=s(94413),i=s(74684);t.exports=function(t){return a(i(t))}},68700:(t,e,s)=>{var a=s(58828);t.exports=function(t){var e=+t;return e!==e||0===e?0:a(e)}},43126:(t,e,s)=>{var a=s(68700),i=Math.min;t.exports=function(t){return t>0?i(a(t),9007199254740991):0}},70560:(t,e,s)=>{var a=s(79989),i=s(90690),o=s(6310),n=s(5649),r=s(55565),l=s(3689),c=l((function(){return 4294967297!==[].push.call({length:4294967296},1)})),d=function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(t){return t instanceof TypeError}},u=c||!d();a({target:"Array",proto:!0,arity:1,forced:u},{push:function(t){var e=i(this),s=o(e),a=arguments.length;r(s+a);for(var l=0;l<a;l++)e[s]=arguments[l],s++;return n(e,s),s}})}}]);