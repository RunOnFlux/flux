"use strict";(globalThis["webpackChunkflux"]=globalThis["webpackChunkflux"]||[]).push([[2741],{32741:(t,o,e)=>{e.r(o),e.d(o,{default:()=>w});var n=function(){var t=this,o=t._self._c;return o("div",{staticClass:"map"},[o("flux-map",{staticClass:"mb-2 p-0",attrs:{nodes:t.fluxList}}),o("b-row",[o("b-col",{attrs:{md:"6",sm:"12",xs:"12"}},[o("b-card",[o("h4",[t._v("Geographic Locations ("+t._s(t.getLocationCount())+")")]),o("vue-apex-charts",{attrs:{type:"donut",height:"650",width:"100%",options:t.geographicData.chartOptions,series:t.geographicData.series}})],1)],1),o("b-col",{attrs:{md:"6",sm:"12",xs:"12"}},[o("b-card",[o("h4",[t._v("Providers ("+t._s(t.getProviderCount())+")")]),o("vue-apex-charts",{attrs:{type:"donut",height:"650",width:"100%",options:t.providerData.chartOptions,series:t.providerData.series}})],1)],1)],1)],1)},s=[],a=(e(70560),e(86855)),i=e(26253),r=e(50725),u=e(67166),h=e.n(u),l=e(51136),c=e(92355);const g=e(97218),d={components:{BCard:a._,BRow:i.T,BCol:r.l,VueApexCharts:h(),FluxMap:c.Z},data(){return{fluxList:[],fluxNodeCount:0,self:this,providerData:{series:[],chartOptions:{chart:{toolbar:{show:!1}},dataLabels:{enabled:!0},legend:{show:!0,height:100},stroke:{width:0},plotOptions:{pie:{donut:{size:"40%"}}}}},geographicData:{series:[],chartOptions:{chart:{toolbar:{show:!1}},dataLabels:{enabled:!0},legend:{show:!0,height:100},stroke:{width:0},plotOptions:{pie:{donut:{size:"40%"}}}}}}},mounted(){this.getFluxList()},methods:{async getFluxList(){try{const t=await g.get("https://stats.runonflux.io/fluxinfo?projection=geolocation,ip,tier");this.fluxList=t.data.data;const o=await l.Z.fluxnodeCount();this.fluxNodeCount=o.data.data.total,await this.generateGeographicPie(),await this.generateProviderPie()}catch(t){console.log(t)}},async generateGeographicPie(){const t=[],o=[],e=[];this.fluxList.forEach((t=>{if(t.geolocation&&t.geolocation.country){const o=e.find((o=>o.country===t.geolocation.country));if(o)o.amount+=1;else{const o={country:t.geolocation.country||"Unknown",amount:1};e.push(o)}}else{const t=e.find((t=>"Unknown"===t.country));if(t)t.amount+=1;else{const t={country:"Unknown",amount:1};e.push(t)}}}));for(let n=0;n<this.fluxNodeCount-this.fluxList.length;n+=1){const t=e.find((t=>"Unknown"===t.country));if(t)t.amount+=1;else{const t={country:"Unknown",amount:1};e.push(t)}}e.sort(((t,o)=>o.amount-t.amount)),this.geographicData.series=[],e.forEach((e=>{t.push(`${e.country} (${e.amount})`),o.push(e.amount)})),this.geographicData.chartOptions={labels:t,legend:{show:!0,position:"bottom",height:100}},this.geographicData.series=o},getLocationCount(){return this.geographicData.series&&this.geographicData.series.length>1?this.geographicData.series.length:0},async generateProviderPie(){const t=[],o=[],e=[];this.fluxList.forEach((t=>{if(t.geolocation&&t.geolocation.org){const o=e.find((o=>o.org===t.geolocation.org));if(o)o.amount+=1;else if(t.geolocation.org){const o={org:t.geolocation.org,amount:1};e.push(o)}else{const t=e.find((t=>"Unknown"===t.org));if(t)t.amount+=1;else{const t={org:"Unknown",amount:1};e.push(t)}}}else{const t=e.find((t=>"Unknown"===t.org));if(t)t.amount+=1;else{const t={org:"Unknown",amount:1};e.push(t)}}}));for(let n=0;n<this.fluxNodeCount-this.fluxList.length;n+=1){const t=e.find((t=>"Unknown"===t.org));if(t)t.amount+=1;else{const t={org:"Unknown",amount:1};e.push(t)}}e.sort(((t,o)=>o.amount-t.amount)),this.providerData.series=[],e.forEach((e=>{t.push(`${e.org} (${e.amount})`),o.push(e.amount)})),this.providerData.chartOptions={labels:t,legend:{show:!0,position:"bottom",height:100}},this.providerData.series=o},getProviderCount(){return this.providerData.series&&this.providerData.series.length>1?this.providerData.series.length:0},beautifyValue(t,o=2){const e=t.toFixed(o);return e.replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,")}}},p=d;var f=e(1001),m=(0,f.Z)(p,n,s,!1,null,null,null);const w=m.exports},51136:(t,o,e)=>{e.d(o,{Z:()=>s});var n=e(80914);const s={listFluxNodes(){return(0,n.Z)().get("/daemon/listzelnodes")},fluxnodeCount(){return(0,n.Z)().get("/daemon/getzelnodecount")},blockReward(){return(0,n.Z)().get("/daemon/getblocksubsidy")}}}}]);